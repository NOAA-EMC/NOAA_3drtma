#!/bin/ksh

# --- for debug --- #
date
export PS4=' $SECONDS + ' 
set -x

#######################################################
# The following variable could be defined in the 
# submission script (the ecf script *.sms, or ROCOTO *.xml),
# if not, they will take the default values which is set 
# for the NCO running enviroment
#######################################################

export RUN_ENVIR=${RUN_ENVIR:-nco}

###################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-rtma3d}
export RUN=${RUN:-rtma3d}
export model=${model:-rtma3d}

export domain=${domain:-conus}
##########################################################
# obtain unique process id (pid)
##########################################################
export job=${job:-"${outid}.o$$"}
export jobid=${jobid:-"${outid}.o$$"}
export MPIRUN=${MPIRUN:-"mpirun"}

export CNVGRIB=${CNVGRIB:-cnvgrib}

##########################################################
# make temp/running directories
##########################################################
export DATA=${DATA:-$DATAROOT/${jobid:?}} #jobid ($job.$LSB_JOBID MUST BE DEFINED IN TERMS OF $RUN IN UPPER LEVEL SCRIPT /MPondeca, 26Jul2015
if [ -d $DATA ] ; then
   rm  -rf $DATA/*
else
   mkdir -p $DATA
fi
cd $DATA

#####################################################
# Run setpdy and initialize PDY variables
#    setpdy.sh needs the variables 
#    $PDY and $cyc already defined in advance
#####################################################
#setpdy.sh
#. ${DATA}/PDY

export subcyc=${subcyc} #Note: Must define subcyc in upper level script. Can be 00, 15, 30, or 45 /MPondeca, 30Jun2017
                         #only used for rurtma2p5

export cycle=${cycle:-t${cyc}${subcyc}z}
####################################
# Determine Job Output Name on System
####################################
export LOG_JJOB=${LOG_JJOB:-$COMROOT/logs/jlogfiles}
export jlogfile=${jlogfile:-$LOG_JJOB/jlogfile.${jobid}}
# export pgmout=${pgmout:-"OUTPUT.$$"}
export pgmout=${pgmout:-"OUTPUT.${PDY}${cyc}${subcyc}.${jobid}"}
if [ ! -d ${LOG_JJOB} ] ; then
   mkdir -p ${LOG_JJOB}
fi
if [ ! -d ${LOG_PGMOUT} ] ; then
   mkdir -p ${LOG_PGMOUT}
fi

# specify the file head for the file names of the archived data files
export PROD_HEAD=${PROD_HEAD:-"${RUN}.t${cyc}z"}

# Specify Execution Areas
export HOMErtma3d=${HOMErtma3d:-$NWROOT/rtma.${rtma_ver}}
export EXECrtma3d=${EXECrtma3d:-$HOMErtma3d/exec}
export FIXrtma3d=${FIXrtma3d:-$HOMErtma3d/fix/${RUN}}
export PARMrtma3d=${PARMrtma3d:-$HOMErtma3d/parm/${RUN}}
export USHrtma3d=${USHrtma3d:-$HOMErtma3d/ush/${RUN}}
export UTILrtma3d=${UTILrtma3d:-$HOMErtma3d/util/${RUN}}

#################################################
# Set up the INPUT and OUTPUT directories
#################################################
export COMIN=${COMIN:-${COMROOT}/${NET}/${envir}/${RUN}.${PDY}}
export COMOUT=${COMOUT:-${COMROOT}/${NET}/${envir}/${RUN}.${PDY}}

# Directory to store the Pre-processed obs and ready as input for the RTMA3D (BUFR?) 
export COMINrap=${COMINRAP}/rtma_ru.${PDY}
export COMINhrrr=${COMINHRRR}/hrrr.${PDY}/${domain}
export COMINobsproc_rtma3d=${COMINobsproc_rtma3d:-"${COMIN}/obsprd.${cycle}"}
# export OBS_DIR_CYCLE=${OBS_DIR}/${PDY}${cyc}

if [ ! -d "${COMOUT}" ] ; then
   mkdir -p $COMOUT
fi

if [ ! -d "${COMINobsproc_rtma3d}" ] ; then
   mkdir -p $COMINobsproc_rtma3d
fi

# obs data from HPSS
if [ ! -d "${COMINrap}" ] ; then
  ${ECHO} "ERROR: ${COMINrap} does not exist!"
  exit 1
fi
#if [ ! -d "${COMINhrrr}" ] ; then
#  ${ECHO} "ERROR: ${COMINhrrr} does not exist!"
#  exit 1
#fi

###########################################################

######################
# Execute the script.
######################
${exSCR_PREPOBS:-$HOMErtma3d/scripts/ex${RUN}_prepobs.ksh}
export err=$?; err_chk

msg="$0 of $job completed normally"
postmsg $jlogfile "$msg"

if [ -e "${pgmout}" ] ; then
   cat $pgmout
   cp -p $pgmout   ${LOG_PGMOUT}
fi

##############################
# Remove the Temporary working directory
##############################
if [ "${KEEPDATA}" != YES ]; then
   rm -rf $DATA
fi

date
